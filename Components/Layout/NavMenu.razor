@implements IDisposable
@inject NavigationManager NavigationManager

<nav class="navbar">
    <div class="navbar-container">
        <a class="navbar-brand" href="/">BlazorTaskManager</a>
        <div class="navbar-links">
            <NavLink class="nav-link" href="/" Match="NavLinkMatch.All">Home</NavLink>
            <AuthorizeView>
                <Authorized>
                    <NavLink class="nav-link" href="Account/Manage"> @context.User.Identity?.Name</NavLink>
                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                        <button type="submit" class="nav-link logout-btn">Logout</button>
                    </form>
                </Authorized>
                <NotAuthorized>
                    <NavLink class="nav-link" href="Account/Register">Register</NavLink>
                    <NavLink class="nav-link" href="Account/Login">Login</NavLink>
                </NotAuthorized>
            </AuthorizeView>
        </div>
    </div>
</nav>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}
