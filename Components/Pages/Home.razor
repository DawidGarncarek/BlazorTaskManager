@page "/"
@inject TaskContext TaskContext
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider
@using BlazorTaskManager.Data
@using BlazorTaskManager.Models;
@using BlazorTaskManager.Models.Task;

<h3>Lista zadań</h3>

<table class="table">
    <thead>
        <tr>
            <th>Opis</th>
            <th>Ukończone</th>
            <th>Akcje</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var task in tasks)
        {
            <tr>
                <td>@task.Title</td>
                <td>
                    <input type="checkbox" checked="@task.IsCompleted" @onchange="() => ToggleCompletion(task)" />
                </td>
                <td>
                    <button @onclick="() => DeleteTask(task.Id)" class="btn btn-danger">Usuń</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<button class="btn btn-primary" @onclick="NavigateToAddTask">Dodaj zadanie</button>

@code {
    private List<TaskItem> tasks = new();

    protected override void OnInitialized()
    {
        tasks = TaskContext.Tasks.ToList();
    }

    private void ToggleCompletion(TaskItem task)
    {
        task.IsCompleted = !task.IsCompleted;
        TaskContext.SaveChanges();
    }

    private void DeleteTask(int id)
    {
        var task = TaskContext.Tasks.Find(id);
        if (task != null)
        {
            TaskContext.Tasks.Remove(task);
            TaskContext.SaveChanges();
            tasks = TaskContext.Tasks.ToList();
        }
    }

    private void NavigateToAddTask()
    {
        Navigation.NavigateTo("/addtask");
    }
}
